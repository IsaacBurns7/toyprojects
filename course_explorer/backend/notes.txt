/*
    PROFESSOR SCHEMA 
    {
        info: { profId(can this override _id), name, averageGPA, totalSections, totalStudents, averageRating, totalRatings, etc},
        sections: [{section1}, {section2}, etc],
        ratings: [{rating1}, {rating2}, etc]
        
    }

    or perhaps 
    {
        info: {infoObj},
        courses: [
            {
                courseId (based on dept and name),
                sections: [{section1}, {section2}],
                ratings: [{rating1}]
            }
        ]
    }

    note: there also will be a way to grab a professor in respect to just one class - because some professor teach one class better than others
*/

/*
    DEPTARTMENT SCHEMA
    {
        info: { name }
        courses: [
        {courseNumber, courseTitle, courseDescription, courseId}        
        ]
    }

    note: no need for department id b/c the name is guaranteed to be unique, and its automatically sorted alphabetically
*/

/*
    COURSE SCHEMA

    {
        info: {courseId, averageGPA, totalSections, totalStudents, averageRating, totalRatings}
        professors: [
            "professorName1",
            "professorName2",
            "professorName3"
        ]
    }
    
    OR 
    
    {
        info: {infoObj},
        professors: [
            "professorID1",
            "professorID2"
        ]
    }

    note: may need to extend to preqrequisite classes and postrequisite classes (what classes need this class)
*/